{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-04T14:03:32.328Z",
    "end": "2024-07-04T14:03:34.517Z",
    "duration": 2189,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d01c1e37-d6ef-4900-a646-230789d91d52",
      "title": "",
      "fullFile": "cypress/e2e/bet.cy.ts",
      "file": "cypress/e2e/bet.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bdcf83e7-cbd4-4a08-b8df-542e718f7361",
          "title": "Bet",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should bet on ponies",
              "fullTitle": "Bet should bet on ponies",
              "timedOut": null,
              "duration": 2120,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "storeUserInLocalStorage();\ncy.visit('/races');\ncy.wait('@getRaces');\n// go to bet page for the first race\ncy.get('.btn-primary').first().click();\ncy.wait('@getRace').its('request.headers').should('have.property', 'authorization', `Bearer ${user.token}`);\ncy.location('pathname').should('eq', '/races/12');\n// race detail should be displayed\ncy.get('h1').should('contain', 'Paris');\ncy.get('p').should('contain', 'ago');\ncy.get('img').should('have.length', 5);\n// no pony is selected\ncy.get('.selected').should('have.length', 0);\n// bet on first pony\ncy.intercept('GET', 'api/races/12', { ...race, betPonyId: 1 }).as('secondGetRace');\ncy.get('img').first().click();\ncy.wait('@betRace').its('request.body').should('contain', { ponyId: 1 });\ncy.wait('@secondGetRace');\n// a pony is now selected\ncy.get('.selected').should('have.length', 1);\n// bet on the second one\ncy.intercept('GET', 'api/races/12', { ...race, betPonyId: 2 }).as('thirdGetRace');\ncy.get('img').eq(1).click();\ncy.wait('@betRace').its('request.body').should('contain', { ponyId: 2 });\ncy.wait('@thirdGetRace');\n// a pony is still selected\ncy.get('.selected').should('have.length', 1);\n// cancel fails\ncy.intercept('DELETE', 'api/races/12/bets', {\n    statusCode: 404\n}).as('failedCancelBetRace');\n// cancel bet on second pony\ncy.get('img').eq(1).click();\ncy.wait('@failedCancelBetRace');\n// alert should be displayed\ncy.get('.alert').should('contain', 'The race is already started or finished');\n// close alert\ncy.get('.alert button').click();\ncy.get('.alert').should('not.exist');\n// bet fails\ncy.intercept('POST', 'api/races/12/bets', {\n    statusCode: 404\n}).as('failedBetRace');\n// bet on first pony\ncy.get('img').first().click();\ncy.wait('@failedBetRace');\n// alert should be displayed\ncy.get('.alert').should('contain', 'The race is already started or finished');\n// close alert\ncy.get('.alert button').click();\ncy.get('.alert').should('not.exist');\ncy.intercept('DELETE', 'api/races/12/bets', {}).as('cancelBetRace');\n// cancel bet\ncy.intercept('GET', 'api/races/12', { ...race }).as('fourthGetRace');\ncy.get('img').eq(1).click();\ncy.wait('@cancelBetRace');\ncy.wait('@fourthGetRace');\n// no pony is selected anymore\ncy.get('.selected').should('have.length', 0);",
              "err": {},
              "uuid": "01efbd02-230d-423d-8444-6fe58aa65e7f",
              "parentUUID": "bdcf83e7-cbd4-4a08-b8df-542e718f7361",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01efbd02-230d-423d-8444-6fe58aa65e7f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2120,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}